local status_ok, alpha = pcall(require, "alpha")
if not status_ok then
	return
end

local dashboard = require("alpha.themes.dashboard")
dashboard.section.header.val = {

"‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚¢ª‚£ø‚£ø‚£¶‚°Ä‚†Ä‚†Ä‚£ø‚£§‚†§‚†¥‚†∂‚†∂‚†í‚†í‚†í‚†í‚†í‚†∂‚†∂‚†§‚£§‚£º‚£ø‚£ø‚†á‚†Ä‚£∂‚†ü‚†Å‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä",
"‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†à‚£Ω‚£ø‚£ø‚£ø‚†Ñ‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†à‚†ô‚†õ‚†Ä‚£§‚£ø‚†Ç‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä",
"‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚£†‚£æ‚£ø‚†ü‚†ã‚†Å‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†â‚†¢‚°Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä",
"‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚¢Ä‚£æ‚£ø‚£ø‚†É‚¢Ä‚††‚†§‚£Ä‚°Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚£Ä‚£Ä‚£Ä‚†Ä‚†Ä‚†ê‚£Ñ‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä",
"‚†Ä‚†Ä‚†§‚£§‚£Ä‚£Ä‚£Ä‚°Ä‚†Ä‚†Ä‚£†‚£ø‚£ø‚£ø‚£ø‚†ä‚†Ä‚†∞‚¢ø‚†ø‚†Ä‚¢¢‚†Ä‚†Ä‚†Ä‚††‚†§‚†§‚£Ñ‚£Ä‚£Ä‚†Ä‚†Ñ‚†Ä‚†Ä‚†Ä‚¢†‚†ã‚¢ø‚£ø‚†Ü‚†à‚¢¢‚†Ä‚†ò‚£ß‚°Ä‚†Ä‚†Ä‚¢Ä‚£Ä‚£Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä",
"‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†â‚†â‚†ô‚†õ‚£ø‚£ø‚£ø‚£ø‚£ø‚†è‚†¢‚£Ä‚†Ä‚†Ä‚£Ä‚°†‚†ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†â‚†õ‚†õ‚†â‚†Å‚†Ä‚†Ä‚†Ä‚†Ä‚†∏‚£Ñ‚†Ä‚†Ä‚†Ä‚¢Ä‚†ú‚†Ä‚£†‚°º‚¢∑‚†í‚†õ‚†â‚†Å‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä",
"‚†â‚†ô‚†õ‚†í‚†í‚†í‚†≤‚†∂‚£∂‚£ø‚£ø‚£ø‚£ø‚£Ø‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†à‚†â‚†â‚†â‚†Ä‚†Ä‚†Ä‚††‚†§‚†º‚¢∑‚°§‚†§‚†§‚†§‚†§‚†§‚†§‚†§‚†§‚†Ä‚†Ä",
"‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚¢Ä‚£Ä‚£Ä‚£ø‚£ø‚£ø‚£ø‚£ø‚°É‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†ê‚†í‚†∫‚¢∑‚°∂‚†∂‚†¶‚£§‚£§‚£Ñ‚£Ä‚†Ä‚†Ä‚†Ä",
"‚†Ä‚†í‚†õ‚†õ‚†â‚†â‚¢â‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ß‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚£Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†ô‚¢¶‚°Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä",
"‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚£†‚£æ‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚°ø‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚¢Ä‚£Ä‚£Ä‚£Ä‚£Ä‚£Ä‚£Ä‚£Ä‚°Ä‚†Ä‚†Ä‚†Ä‚£Ä‚£Ä‚°Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†π‚£Ñ‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä",
"‚†Ä‚†Ä‚†Ä‚¢Ä‚£æ‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚†ü‚†Å‚†Ä‚£Ä‚£§‚£∂‚†∂‚†ñ‚†õ‚†ã‚†Ä‚†Ä‚†â‚†â‚†â‚†â‚†â‚†â‚†â‚†â‚†â‚†â‚†ô‚†ì‚†≤‚†¶‚¢§‚£Ñ‚£Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†ò‚¢¶‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä",
"‚†Ä‚¢Ä‚£¥‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£Ø‚°§‚†ñ‚†õ‚†â‚†Å‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†â‚†ô‚†≥‚¢¶‚£Ñ‚°Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†≥‚£Ñ‚†Ä‚†Ä‚†Ä",

}

dashboard.section.buttons.val = {
	dashboard.button("f", "Ôúù  Find file", ":FzfLua files <CR>"),
	dashboard.button("e", "ÔÖõ  New file", ":ene <BAR> startinsert <CR>"),
	dashboard.button("t", "ÔûÉ  Find text", ":FzfLua live_grep <CR>"),
	dashboard.button("c", "Óòï  Configuration", ":e $MYVIMRC <CR>"),
	dashboard.button("q", "Ôôô  Quit Neovim", ":qa<CR>"),
}

local function footer()
    local function get_table_size(t)
      local count = 0
      for _, __ in pairs(t) do
        count = count + 1
      end
      return count
    end
    local opt, start = require('packer.plugin_utils').list_installed_plugins()
    local plugin_count = get_table_size(opt) + get_table_size(start)
    local version = vim.version()
    local nvim_version_info = "Ôîß v" .. version.major .. "." .. version.minor .. "." .. version.patch

    return string.format(
        "The Nugget | Ôñï %d plugins üü¢ | %s",
        plugin_count,
        nvim_version_info
    )
end

dashboard.section.footer.val = footer()

dashboard.section.footer.opts.hl = "Type"
dashboard.section.header.opts.hl = "Include"
dashboard.section.buttons.opts.hl = "Keyword"

dashboard.opts.opts.noautocmd = true
-- vim.cmd([[autocmd User AlphaReady echo 'ready']])
alpha.setup(dashboard.opts)
